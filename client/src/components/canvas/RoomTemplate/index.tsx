/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import * as THREE from 'three'
import React, { useRef, useMemo, useState, useEffect } from 'react'
import { Group } from 'three'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { RigidBody } from '@react-three/rapier'

type GLTFResult = GLTF & {
  nodes: {
    Plane: THREE.Mesh
    Plane001: THREE.Mesh
    Plane002: THREE.Mesh
  }
  materials: {
    ['Material.003']: THREE.MeshStandardMaterial
    ['Material.002']: THREE.MeshStandardMaterial
    ['Material.001']: THREE.MeshStandardMaterial
  }
}

export const RoomTemplate = () => {
  const ref = useRef<Group>()
  const { nodes, materials } = useGLTF('/assets/room.glb') as GLTFResult

  return (
    <RigidBody colliders={'hull'} mass={1}>
      <group ref={ref}>
        <mesh castShadow receiveShadow geometry={nodes.Plane.geometry} material={materials['Material.003']} scale={2} />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane001.geometry}
          material={materials['Material.002']}
          position={[0, 2, -2]}
          rotation={[Math.PI / 2, 0, 0]}
          scale={2}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Plane002.geometry}
          material={materials['Material.001']}
          position={[-2, 2, 0]}
          rotation={[Math.PI / 2, 0, -Math.PI / 2]}
          scale={2}
        />
      </group>
    </RigidBody>
  )
}

useGLTF.preload('/assets/room.glb')
